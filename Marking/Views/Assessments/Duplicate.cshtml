@model Marking.ViewModels.DuplicateAssessmentVM

@section AddToHead{
    <link href="@Url.Content("~/Content/Assessments/Duplicate.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/Assessments/Duplicate.js")"></script>
}

@{
    ViewBag.Title = "Copy Assessment";

    List<SelectListItem> yearList = new List<SelectListItem>();
    yearList.Add(new SelectListItem { Text = "- Filter by Year -", Value = "" });
    foreach (var year in Model.FilterYears)
    {
        yearList.Add(new SelectListItem
        {
            Text = year.ToString(),
            Value = year.ToString()
        });
    }

    List<SelectListItem> gradeList = new List<SelectListItem>();
    gradeList.Add(new SelectListItem { Text = "- Filter by Grade -", Value = "" });
    foreach (var grade in Model.FilterGrades)
    {
        gradeList.Add(new SelectListItem
        {
            Text = grade.ToString(),
            Value = grade.ToString()
        });
    }

    List<SelectListItem> classroomList = new List<SelectListItem>();
    classroomList.Add(new SelectListItem { Text = "- Filter by Classroom -", Value = "" });
    foreach (var classroom in Model.FilterClassrooms)
    {
        classroomList.Add(new SelectListItem
        {
            Text = classroom.Title,
            Value = classroom.ID.ToString()
        });
    }
}
<a class="BackButton" href="@Url.Action("Index", "Classrooms")">Back to Classrooms</a>
<h3>Add Existing Assessment to <span>@Model.ClassroomTitle, Grade @Model.Grade</span></h3>

<table id="AssessmentTable">
    <thead>
        <tr>
            <th>@Html.DropDownList("YearFilter", yearList)</th>
            <th>@Html.DropDownList("GradeFilter", gradeList)</th>
            <th>@Html.DropDownList("ClassroomFilter", classroomList)</th>
            <th><button id="ResetFilter" type="button">Reset Filter</button></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
@{ Html.BeginForm("Duplicate", "Assessments", FormMethod.Post, new { id = "AssessmentForm" }); }
@Html.AntiForgeryToken()
<input type="hidden" id="AssessmentID" name="AssessmentID" />
<input type="hidden" id="ClassroomID" name="ClassroomID" value="@Model.ClassroomID" />
@{ Html.EndForm(); }
<script type="text/javascript">
    var assessments = @Html.Raw(Json.Encode(Model.Assessments)) ;
</script>